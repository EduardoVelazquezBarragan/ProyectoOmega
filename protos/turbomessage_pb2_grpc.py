# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import turbomessage_pb2 as turbomessage__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in turbomessage_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TurboMessageStub(object):
    """-------------------------------------------
    TurboMessage gRPC service definition
    -------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/turbomessage.TurboMessage/Register',
                request_serializer=turbomessage__pb2.RegisterRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.RegisterResponse.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/turbomessage.TurboMessage/Login',
                request_serializer=turbomessage__pb2.LoginRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.SendMessage = channel.unary_unary(
                '/turbomessage.TurboMessage/SendMessage',
                request_serializer=turbomessage__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.SendMessageResponse.FromString,
                _registered_method=True)
        self.ListInbox = channel.unary_stream(
                '/turbomessage.TurboMessage/ListInbox',
                request_serializer=turbomessage__pb2.ListInboxRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.Message.FromString,
                _registered_method=True)
        self.ListOutbox = channel.unary_stream(
                '/turbomessage.TurboMessage/ListOutbox',
                request_serializer=turbomessage__pb2.ListOutboxRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.Message.FromString,
                _registered_method=True)
        self.ReadMessage = channel.unary_unary(
                '/turbomessage.TurboMessage/ReadMessage',
                request_serializer=turbomessage__pb2.ReadMessageRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.ReadMessageResponse.FromString,
                _registered_method=True)
        self.DeleteMessage = channel.unary_unary(
                '/turbomessage.TurboMessage/DeleteMessage',
                request_serializer=turbomessage__pb2.DeleteMessageRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.DeleteMessageResponse.FromString,
                _registered_method=True)


class TurboMessageServicer(object):
    """-------------------------------------------
    TurboMessage gRPC service definition
    -------------------------------------------

    """

    def Register(self, request, context):
        """User management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Mail operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInbox(self, request, context):
        """Streams each Message entry back to the client
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOutbox(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TurboMessageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=turbomessage__pb2.RegisterRequest.FromString,
                    response_serializer=turbomessage__pb2.RegisterResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=turbomessage__pb2.LoginRequest.FromString,
                    response_serializer=turbomessage__pb2.LoginResponse.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=turbomessage__pb2.SendMessageRequest.FromString,
                    response_serializer=turbomessage__pb2.SendMessageResponse.SerializeToString,
            ),
            'ListInbox': grpc.unary_stream_rpc_method_handler(
                    servicer.ListInbox,
                    request_deserializer=turbomessage__pb2.ListInboxRequest.FromString,
                    response_serializer=turbomessage__pb2.Message.SerializeToString,
            ),
            'ListOutbox': grpc.unary_stream_rpc_method_handler(
                    servicer.ListOutbox,
                    request_deserializer=turbomessage__pb2.ListOutboxRequest.FromString,
                    response_serializer=turbomessage__pb2.Message.SerializeToString,
            ),
            'ReadMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadMessage,
                    request_deserializer=turbomessage__pb2.ReadMessageRequest.FromString,
                    response_serializer=turbomessage__pb2.ReadMessageResponse.SerializeToString,
            ),
            'DeleteMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessage,
                    request_deserializer=turbomessage__pb2.DeleteMessageRequest.FromString,
                    response_serializer=turbomessage__pb2.DeleteMessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'turbomessage.TurboMessage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('turbomessage.TurboMessage', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TurboMessage(object):
    """-------------------------------------------
    TurboMessage gRPC service definition
    -------------------------------------------

    """

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/turbomessage.TurboMessage/Register',
            turbomessage__pb2.RegisterRequest.SerializeToString,
            turbomessage__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/turbomessage.TurboMessage/Login',
            turbomessage__pb2.LoginRequest.SerializeToString,
            turbomessage__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/turbomessage.TurboMessage/SendMessage',
            turbomessage__pb2.SendMessageRequest.SerializeToString,
            turbomessage__pb2.SendMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListInbox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/turbomessage.TurboMessage/ListInbox',
            turbomessage__pb2.ListInboxRequest.SerializeToString,
            turbomessage__pb2.Message.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListOutbox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/turbomessage.TurboMessage/ListOutbox',
            turbomessage__pb2.ListOutboxRequest.SerializeToString,
            turbomessage__pb2.Message.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/turbomessage.TurboMessage/ReadMessage',
            turbomessage__pb2.ReadMessageRequest.SerializeToString,
            turbomessage__pb2.ReadMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/turbomessage.TurboMessage/DeleteMessage',
            turbomessage__pb2.DeleteMessageRequest.SerializeToString,
            turbomessage__pb2.DeleteMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
